name: Aider PR Update workflow
on:
  workflow_call:
    inputs:
      pr-number:
        description: "PR number"
        required: true
        type: number
      comment:
        description: "Comment that triggered the workflow"
        required: true
        type: string
      chat-timeout:
        description: "Timeout for chat in minutes to prevent burning your credits"
        required: false
        type: number
        default: 10
      model:
        description: "Model to use"
        required: false
        type: string
        default: "claude-3-5-sonnet-20241022"
    secrets:
      openai_api_key:
        description: "OpenAI API key"
        required: false
      anthropic_api_key:
        description: "Anthropic API Key"
        required: false
      gemini_api_key:
        description: "Gemini API Key"
        required: false
      groq_api_key:
        description: "Groq API Key"
        required: false
      cohere_api_key:
        description: "Cohere API Key"
        required: false
      deepseek_api_key:
        description: "Deepseek API Key"
        required: false
      openrouter_api_key:
        description: "OpenRouter API Key"
        required: false

jobs:
  update-pull-request:
    permissions:
      pull-requests: write
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Get PR details
        uses: actions/github-script@v7
        id: get_pr_details
        with:
          script: |
            const { repo, owner } = context.repo;
            const pr = await github.rest.pulls.get({
              owner,
              repo,
              pull_number: ${{ inputs.pr-number }}
            });
            return {
              head_ref: pr.data.head.ref,
              head_sha: pr.data.head.sha
            };
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ fromJson(steps.get_pr_details.outputs.result).head_ref }}
          fetch-depth: 0

      - name: Create prompt
        id: create_prompt
        uses: actions/github-script@v7
        env:
          COMMENT: ${{ inputs.comment }}
        with:
          result-encoding: string
          script: |
            const comment = process.env.COMMENT;
            const body = comment.replace(/^\/aider\s*/, '');

            return JSON.stringify({
              edit: `Analyse the request below and apply all the necessary changes based on the description. Request access to the files you need.\nDescription:\n${body}`,
              review: `Review and verify if the request below was fully implemented. Fix any missing changes. Request access to the files you need.\nDescription:\n${body}`,
            });
      - name: Apply changes with Aider
        uses: mirrajabi/aider-github-action@main
        timeout-minutes: ${{ inputs.chat-timeout }}
        id: aider_edit
        with:
          branch: refs/heads/${{ fromJson(steps.get_pr_details.outputs.result).head_ref }}
          model: ${{ inputs.model }}
          aider_args: '--yes-always --architect --no-auto-lint --message "${{ fromJson(steps.create_prompt.outputs.result).edit }}" --map-tokens 2048'
          # API keys
          openai_api_key: ${{ secrets.openai_api_key }}
          anthropic_api_key: ${{ secrets.anthropic_api_key }}
          cohere_api_key: ${{ secrets.cohere_api_key }}
          deepseek_api_key: ${{ secrets.deepseek_api_key }}
          gemini_api_key: ${{ secrets.gemini_api_key }}
          groq_api_key: ${{ secrets.groq_api_key }}
          openrouter_api_key: ${{ secrets.openrouter_api_key }}

      - name: Force pull latest changes
        run: |
          git fetch origin
          git reset --hard origin/${{ fromJson(steps.get_pr_details.outputs.result).head_ref }}
          
      - name: Review changes with Aider
        uses: mirrajabi/aider-github-action@main
        timeout-minutes: ${{ inputs.chat-timeout }}
        id: aider_review
        with:
          branch: refs/heads/${{ fromJson(steps.get_pr_details.outputs.result).head_ref }}
          model: ${{ inputs.model }}
          aider_args: '--yes-always --architect --no-auto-lint --message "${{ fromJson(steps.create_prompt.outputs.result).review }}" --map-tokens 2048'
          # API keys
          openai_api_key: ${{ secrets.openai_api_key }}
          anthropic_api_key: ${{ secrets.anthropic_api_key }}
          cohere_api_key: ${{ secrets.cohere_api_key }}
          deepseek_api_key: ${{ secrets.deepseek_api_key }}
          gemini_api_key: ${{ secrets.gemini_api_key }}
          groq_api_key: ${{ secrets.groq_api_key }}
          openrouter_api_key: ${{ secrets.openrouter_api_key }}

      - name: Add comment to PR
        uses: actions/github-script@v7
        env:
          JOB_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: ${{ inputs.pr-number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Aider has processed your request. Please review the changes and let me know if you need any further modifications.\n\nFor full details of the Aider execution, please check the [job log](${process.env.JOB_URL}).`
            })